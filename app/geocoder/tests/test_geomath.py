
from unittest import TestCase
from app.geocoder.geomath import GeoMath

class TestInterpolalation(TestCase):

    @classmethod
    def setUpClass(cls):
        point_strings = [
                  ['-72.7938789999999898', '40.8591690000000014'],
                  ['-72.7938800000000015', '40.8589319999999958'],
                  ['-72.7938269999999932', '40.8587440000000015'],
                  ['-72.7937569999999994', '40.8585989999999981'],
                  ['-72.7934139999999985', '40.8580279999999973'],
                  ['-72.7933379999999914', '40.8578679999999963'],
                  ['-72.7932929999999914', '40.8577329999999961'],
                  ['-72.7932839999999999', '40.8575899999999947'],
                  ['-72.7933829999999915', '40.8569899999999961'],
                  ['-72.7933689999999984', '40.8568829999999963'],
                  ['-72.7933230000000009', '40.8568039999999968'],
                  ['-72.7932469999999938', '40.8567389999999975'],
                  ['-72.7931250000000034', '40.8567049999999981'],
                  ['-72.7925740000000019', '40.8566459999999978']
        ]

        cls.points = [
            [float(point[0]), float(point[1])] for point in point_strings
            ]

    def test_interpolation_with_from_and_to(self):
        interpolated_point = GeoMath().interpolate(self.points, 6, 0, 100, 1, 99)
        assert interpolated_point == [-72.79387938164022, 40.8591068212366]

